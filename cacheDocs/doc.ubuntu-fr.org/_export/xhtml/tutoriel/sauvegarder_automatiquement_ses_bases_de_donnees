<!DOCTYPE html>
<html lang="fr" dir="ltr">
<head>
  <meta charset="utf-8" />
  <title>tutoriel:sauvegarder_automatiquement_ses_bases_de_donnees</title>
<meta name="generator" content="DokuWiki"/>
<meta name="robots" content="index,follow"/>
<meta name="date" content="2013-11-27T12:30:51+0100"/>
<meta name="keywords" content="tutoriel,sauvegarde,serveur,sgbd,mysql"/>
<link rel="search" type="application/opensearchdescription+xml" href="../../../lib/exe/opensearch.php" title="Documentation Ubuntu Francophone"/>
<link rel="start" href="../../../index.html"/>
<link rel="contents" href="http://doc.ubuntu-fr.org/tutoriel/sauvegarder_automatiquement_ses_bases_de_donnees?do=index" title="Plan du site"/>
<link rel="alternate" type="application/rss+xml" title="Derniers changements" href="../../../feed.php"/>
<link rel="alternate" type="application/rss+xml" title="Namespace actuel" href="../../../feed.php?mode=list&amp;ns=tutoriel"/>
<link rel="alternate" type="text/html" title="HTML brut" href="sauvegarder_automatiquement_ses_bases_de_donnees"/>
<link rel="alternate" type="text/plain" title="Wiki balise" href="http://doc.ubuntu-fr.org/_export/raw/tutoriel/sauvegarder_automatiquement_ses_bases_de_donnees"/>
<link rel="canonical" href="../../../tutoriel/sauvegarder_automatiquement_ses_bases_de_donnees"/>
<link rel="stylesheet" type="text/css" href="../../../lib/exe/css.php?t=ubuntu-2010&amp;tseed=4af22dedc19f28c99fa67afabbb173df"/>
<script type="text/javascript">/*<![CDATA[*/var NS='tutoriel';var JSINFO = {"id":"tutoriel:sauvegarder_automatiquement_ses_bases_de_donnees","namespace":"tutoriel"};
/*!]]>*/</script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php?tseed=4af22dedc19f28c99fa67afabbb173df"></script>
</head>
<body>
<div class="dokuwiki export">
<!-- TOC START -->
<div id="dw__toc">
<h3 class="toggle">Table des matières</h3>
<div>

<ul class="toc">
<li class="level1"><div class="li"><a href="sauvegarder_automatiquement_ses_bases_de_donnees#creation_des_scripts">Création des scripts</a></div></li>
<li class="level1"><div class="li"><a href="sauvegarder_automatiquement_ses_bases_de_donnees#modification_des_permissions">Modification des permissions</a></div></li>
<li class="level1"><div class="li"><a href="sauvegarder_automatiquement_ses_bases_de_donnees#programmation_de_l_execution_des_scripts_avec_cron">Programmation de l&#039;exécution des scripts avec Cron</a></div></li>
<li class="level1"><div class="li"><a href="sauvegarder_automatiquement_ses_bases_de_donnees#conclusion">Conclusion</a></div></li>
</ul>
</div>
</div>
<!-- TOC END -->
<div class="tags"><span>
	<a href="http://doc.ubuntu-fr.org/tutoriel" class="wikilink1" title="tutoriel" rel="tag">tutoriel</a>,
	<a href="../../../sauvegarde" class="wikilink1" title="sauvegarde" rel="tag">sauvegarde</a>,
	<a href="../../../serveur" class="wikilink1" title="serveur" rel="tag">serveur</a>,
	<a href="../../../sgbd" class="wikilink1" title="sgbd" rel="tag">sgbd</a>,
	<a href="../../../mysql" class="wikilink1" title="mysql" rel="tag">mysql</a>
</span></div>
<hr />

<h1 class="sectionedit1" id="sauvegarder_automatiquement_ses_bases_de_donnees_mysql">Sauvegarder automatiquement ses bases de données MySQL</h1>
<div class="level1">

<p>
Ce mini tutoriel vous présente une méthode simple pour mettre en place une sauvegarde automatique des bases de données de votre serveur <a href="../../../mysql" class="wikilink1" title="mysql">MySQL</a>. Ce script doit être installé sur le serveur MySQL.
</p>

<p>
<p><div class="notetip">Bien que le contenu de cette page reste valide, il est à noter que cette opération peut être réalisée directement avec un script fourni par votre distribution (depuis la version 9.10 inclue) : <a href="../../../automysqlbackup" class="wikilink1" title="automysqlbackup">automysqlbackup</a>. Cette méthode est généralement à préférer, car plus propre.
</div></p>
</p>

<p>
Pour ce faire, nous allons utiliser 2 scripts bash et les tâches cron.
</p>

<p>
Nous allons utiliser le cas suivant :
</p>
<ul>
<li class="level1"><div class="li"> Nous voulons sauvegarder nos 3 bases de données <strong>mon_site</strong>, <strong>mon_forum</strong>, et <strong>mon_blog</strong> automatiquement chaque nuit (nous le faisons la nuit car c&#039;est le moment où un site a le moins de visites et donc le plus de ressources inutilisées disponibles).</div>
</li>
<li class="level1"><div class="li"> Nous nous connectons au serveur de base de données avec le login <strong>root</strong> et le mot de passe <strong>monpass</strong>.</div>
</li>
</ul>

<p>
Attention : en aucun cas vous devez sauvegarder la base de données &quot;à l&#039;état brute&quot;, depuis le répertoire /var/mysq/*. En effet, ce n&#039;est pas très portable et d&#039;autre part, si le serveur n&#039;est pas arrêté, vous risquez d&#039;avoir des données non cohérentes. A la place, en utilisant mysqldump, vous avez une extraction <abbr title="American Standard Code for Information Interchange">ASCII</abbr> de vos données (que vous pouvez compresser), et surtout, un mécanisme de verrou sur les bases à chaque extraction (option -opt de mysqldump par défaut). Vous n&#039;avez en principe pas besoin d&#039;arrêter le serveur.
</p>

<p>
Pour sauvegarder les fichiers de votre site accessibles en ftp uniquement, voir avec <a href="../../../lftp#sauvegarde_sur_votre_ordinateur_de_votre_site_internet" class="wikilink1" title="lftp">lftp</a>
</p>

</div>
<!-- EDIT1 SECTION "Sauvegarder automatiquement ses bases de données MySQL" [56-1823] -->
<h2 class="sectionedit2" id="creation_des_scripts">Création des scripts</h2>
<div class="level2">

<p>
Nous allons créer nos scripts dans le répertoire <strong>/root/scripts/</strong>. Seul root y aura accès en lecture (et écriture).
</p>

<p>
Si le sous répertoire script n&#039;existe pas déjà, le créer :
</p>
<pre class="code"> sudo mkdir /root/scripts</pre>

<p>
Nous créons un premier script que l&#039;on appellera backup_bdd.sh qui contient :
</p>
<pre class="code">#!/bin/bash
#
## on se place dans le repertoire ou l&#039;on veut sauvegarder les bases
#
cd /root/scripts/backups/

for i in mon_site mon_forum mon_blog; do

## Sauvegarde des bases de donnees en fichiers .sql
mysqldump -uroot -pmonpass $i &gt; ${i}_`date +&quot;%Y-%m-%d&quot;`.sql

## Compression des exports en tar.bz2 (le meilleur taux de compression)
tar jcf ${i}_`date +&quot;%Y-%m-%d&quot;`.sql.tar.bz2 ${i}_`date +&quot;%Y-%m-%d&quot;`.sql

## Suppression des exports non compresses
rm ${i}_`date +&quot;%Y-%m-%d&quot;`.sql

done</pre>

<p>
Mettez dans la ligne
</p>
<pre class="code">for i in mon_site mon_forum mon_blog; do</pre>

<p>
ou pour avoir toutes vos bases de données, remplacer cette ligne par 
</p>
<pre class="code"># Récupère toutes les bases de données
databases=`mysql --user=root --password=monpass -e &quot;SHOW DATABASES;&quot; | grep -Ev &quot;(Database|information_schema)&quot;`

# parcours les bases
for i in $databases; do</pre>

<p>
la liste de toutes les bases de données que vous voulez sauvegarder.
</p>

<p>
Par sécurité, on ne veut pas garder que la dernière sauvegarde faite (elle peut être corrompue). Nous insérons donc la date du jour dans le nom de fichier avec `date +&quot;%Y-%m-%d&quot;` qui générera une date au format AAAA-MM-JJ.
</p>

<p>
Il faut créer un second script pour faire le ménage régulièrement dans le dossier de backup pour éviter son embonpoint inévitable.
</p>

<p>
On nomme ce fichier clean_backups.sh et son contenu est :
</p>
<pre class="code">#!/bin/bash
#
## Supprime les sauvegardes vieilles de plus de 5 jours
#
find /root/scripts/backups/ -type f -mtime +4 -delete</pre>

<p>
Note : si votre mot de passe ou votre utilisateur contient les caractères : &quot;!@#$%^&quot; vous recevrez l&#039;erreur 1045 &quot;Access denied for user &#039;xxx&#039;@&#039;localhost &quot; 
</p>

<p>
pour cela (à part changer de user/pass) il faut modifier la ligne :
</p>
<pre class="code">mysqldump -uroot -pmonpass $i &gt; ${i}_`date +&quot;%Y-%m-%d&quot;`.sql</pre>

<p>
par
</p>
<pre class="code">mysqldump --user=xxx --password=xxx $i &gt; ${i}_`date +&quot;%Y-%m-%d&quot;`.sql</pre>

</div>
<!-- EDIT2 SECTION "Création des scripts" [1824-4070] -->
<h2 class="sectionedit3" id="modification_des_permissions">Modification des permissions</h2>
<div class="level2">

<p>
Nous allons faire en sorte que seul root puisse lire, exécuter, et modifier ces 2 scripts :
</p>
<pre class="code">cd /root/scripts &amp;&amp; sudo chmod 700 backup_bdd.sh clean_backups.sh</pre>

</div>
<!-- EDIT3 SECTION "Modification des permissions" [4071-4275] -->
<h2 class="sectionedit4" id="programmation_de_l_execution_des_scripts_avec_cron">Programmation de l&#039;exécution des scripts avec Cron</h2>
<div class="level2">

<p>
<p><div class="notetip">Si votre ordinateur n&#039;est pas allumé en permanence, il vaut mieux utiliser <a href="http://doc.ubuntu-fr.org/fcron" class="wikilink1" title="fcron">fcron</a>, car cron ne s&#039;exécute qu&#039;à une heure précise de la journée alors que fcron prend en compte le temps pendant lequel reste allumé la machine
</div></p>
</p>

<p>
Dans le répertoire <strong>/etc</strong>, vous pouvez voir qu&#039;il existe des répertoires cron.daily, cron.hourly, etc
</p>

<p>
dans le fichier <strong>/etc/crontab</strong>, est notée la fréquence de lancement des tâches cron. Vous pouvez voir que le contenu du répertoire <strong>cron.daily</strong> est exécuté par défaut tous les jours à 6h25. vous pouvez modifier l&#039;horaire si vous le souhaitez. Par exemple en y mettant l&#039;heure où votre site est le moins fréquenté (en général vers 3h du matin). Pour plus d&#039;informations sur la programmation des tâches cron consultez la page sur <a href="../../../cron" class="wikilink1" title="cron">cron</a>.
</p>

<p>
Donc comme nous l&#039;avons dit, les scripts contenus dans le répertoire cron.daily seront exécutés à l&#039;heure définie dans crontab. Nous allons donc y placer des liens vers nos 2 scripts en utilisant une notation à chiffres pour être sûr qu&#039;ils seront exécutés dans l&#039;ordre :
</p>
<pre class="code">cd /etc/cron.daily
sudo ln -s /root/scripts/backup_bdd.sh 01-backup_bdd
sudo ln -s /root/scripts/clean_backups.sh 02-clean_backups</pre>

<p>
<p><div class="noteclassic">Bien sûr, si vous avez déjà des scripts numérotés, incrémentez les numéros en fonction de ceux-ci…
</div></p>
</p>

<p>
<p><div class="noteimportant">
Surtout ne faites pas de lien symbolique avec un point &quot;.&quot; dans le nom du lien, celui-ci ne serait pas exécuté et cron ne log pas cette non exécution.

</div></p>
</p>

<p>
C&#039;est fini :)
</p>

</div>
<!-- EDIT4 SECTION "Programmation de l'exécution des scripts avec Cron" [4276-5898] -->
<h2 class="sectionedit5" id="conclusion">Conclusion</h2>
<div class="level2">

<p>
Chaque nuit, à l&#039;heure définie pour cron.daily, votre serveur sauvegardera automatiquement vos bases de données et supprimera les sauvegardes trop anciennes.
</p>

<p>
Si vous avez un problème sur une base de données, vous pourrez donc extraire l&#039;archive correspondant à l&#039;état de votre base de données à une date précise, vider la base de ses tables et ré-importer le fichier sql dans la base. Ce qui veut dire qu&#039;en cas de soucis vous pouvez remettre vos bases de données en état en moins de 15 secondes ;)
</p>
<hr />

<p>
 <em>Contributeurs : <a href="http://doc.ubuntu-fr.org/utilisateurs/enchained" class="wikilink1" title="utilisateurs:enchained">_Enchained</a></em>
</p>

</div>
<!-- EDIT5 SECTION "Conclusion" [5899-] -->
<!-- cachefile /srv/www/doc.ubuntu-fr.org/htdocs/data/cache/0/036b5d5d43d6b1034fbd67fd526f2714.xhtml used -->
</div>
</body>
</html>
